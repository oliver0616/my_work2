Cyberlearners and Learning Resources  Leyla Zhuhadar Dept. of Computer Engineering and Computer  Science Knowledge Discovery and Web Mining Lab  University of Louisville, USA leyla.zhuhadar@wku.edu  Rong Yang Dept. of Mathematics and Computer Science  Western Kentucky University, USA rong.yang@wku.edu  ABSTRACT The discovery of community structure in real world net- works has transformed the way we explore large systems. We propose a visual method to extract communities of cy- berlearners1 in a large interconnected network consisting of cyberlearners and learning resources. The method used is heuristic and is based on visual clustering and a modularity measure. Each cluster of users is considered as a subset of the community of learners sharing a similar domain of in- terest. Accordingly, a recommender system is proposed to predict and recommend learning resources to cyberlearners within the same community. Experiments on real, dynamic data reveal the structure of community in the network. Our approach used the optimal discovered structure based on the modularity value to design a recommender system.  Keywords Learning Analytics, E-learning, Social Web, Social Network Analysis, Visual Analytics, Modularity, Social Recommender System.  1. INTRODUCTION Nearly 20 years ago, it seemed that the Worldwide Web  (WWW) played a considerable role in facilitating the way people share information. Today, it is obvious that the Web is not only about sharing information, but it is a place where people create, share, interact and learn. If we view the Web purely, like a natural phenomenon, and if we study, say, the behaviors of learners using the social media networks to learn how people learn, this could answer fundamental ques- tions about human behaviors and the impact of the Internet on the social process.  Using analytics to discover hidden patterns in big data  1The term cyberlearner centers on the idea of using on- line learning tools in an educational setting. This term was coined for the first time by the National Science Foundation. For more information, refer to http://cyberlearning.sri.com.  Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, to republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. LAK12, 29 April - 2 May 2012, Vancouver, BC, Canada. Copyright 2012 ACM 978-1-4503-1111-3/12/04 ... $10.00.  started a long time ago in fields such as business intelligence and predictive marketing. Nevertheless, recently, big organi- zations, such as EDUCAUSE2 and the Bill & Melinda Gates Foundation3, are playing an essential role in bridging higher education and data analytics [17].  2. BACKGROUND AND RELATED WORK The term Learning Analytics occurred the first time in  Berk [3], but it was more related to business intelligence as stated in Shum et al.[22]. Noticeably, over the last two years, more research related to learning analytics occurred. The following summary does not exhaust the vast amount of research done in this area, but it gives a short summary. For example, Gasevic et al.[11] experimented with LOCO- Analyst4 on two masters level courses for learning analyt- ics with feedback; their goal was to discover the semantic knowledge based on community and accordingly update the learning process of this community. Johnson et al.[14] men- tioned some learning analytics tools that have emerged in higher education: i) Northern Arizona University uses an academic early alert and retention system5 to improve stu- dents retention and success; ii) Purdue University utilizes Signals6, an analytical data mining tool that identify stu- dents who need help; iii) Ball State University designed a visualized collaborative writing system to help better eval- uate student performance; iv) the University of Wollongong in Australia uses SNAPP7 to visualize data from discus- sion boards to find patterns in students behaviors. The last example is the closest to our system. The similarity be- tween both systems is twofold: goal and method. The goal is to collect data about students to better understand their behaviors and accordingly provide a better understanding on how to help these students. There is a major difference, however between our approach and theirs; in our system this help comes as a recommendation based on similar a commu- nity of learners. We consider the similarity in both context and in communities in social networks; whereas, SNAPP is based only on context. Both systems use visualization as a method to discover patterns. As we know, our cognitive  2http://www.educause.edu/ 3http://nextgenlearning.org 4LOCO-Analyst is an educational tool that provides feed- back to teachers about learners in a specific course, the aim of this system is to improve content and structure of online courses: http://jelenajovanovic.net/LOCO-Analyst 5http://www4.nau.edu/ua/GPS/student/ 6http://www.itap.purdue.edu/tlt/signals/ 7http://research.uow.edu.au/learningnetworks  65    system is not able to deal with vast amounts of informa- tion [6]. The importance of communities in social networks has long been recognized. In 1999, Kleinberg et al.[16] used the concept of a bipartite core to identify Web communi- ties. Flake et al.[8] introduced one of the most attractive definitions for a community, both because of its intuitive appeal and its computational simplicity. There, a commu- nity is defined as a set of web pages in which each member page has more links (in either direction) inside the commu- nity than outside. The exact proportion of inside to outside links can be varied as required. Girvan and Newman [12, 19] devised a method for community determination based on be- tweenness centrality by generalizing it to edges and finding communities by deleting edges from the network in order of decreasing betweenness (and recalculating the between- ness between deletions). Modularity, introduced in Newman and Girvan [20], has become a standard method for measur- ing the success of community decomposition in a network. This measure was turned into a fast and effective commu- nity identification mechanism by using a greedy algorithm to approximately optimize the modularity values. Even this fast algorithm was improved in Clauset et al.[5]. For a recent and much more comprehensive survey see Fortunato [9].  3. METHODOLOGY  3.1 Data Collection The data set used in this study is part of HyperMany-  Medias (HMM) Logfile. We extracted and used only the last six months from the Logfile. In our previous research Zhuhadar et al.[23], we found that i) the profiles of our users are evolving (users interests change over time; i.e., a user might register for courses in chemistry, but after three months, the same users switch to courses in biology) and ii) our platform is an evolving domain (new courses are added to the platform each semester). Accordingly, we provide recommendations based on this dynamic change of students interests. Also, we argue that building a dynamic recommender system based on a social network needs to be scalable to accommodate current and new users. If we con- sidered using the whole Logfile which consists of activities of 750,000 users so far, the time needed to extract recom- mendations from the best candidates in the Logfile, on the fly, would be impractical. The data set used in this research consists of users logs during the following period (2/1/2011- 8/1/2011). Each entry has the following fields: user name, visited resource, number of visits. The number of visits is used as a Weighted Degree in the graph. The more the user (learner) visited a learning resource, the closer the learner is considered to the hub (learning resource); therefore, users who are close to hubs are considered as authorities in that specific domain. Our assumption is built upon the theory of reinforced learning. A very old concept that was introduced in 1913, by Ebbinghaus, in [7]. Ebbinghaus found that if learners are introduced to a problem over many trials, an exponential learning curve is produced. Finally, we visu- alized our Logfile using a graph analysis tool called Gephi [2].  3.2 Evaluation Method (Categorization Cri- teria and Determining the Energy Levels)  As we discussed in section 2, there is a variety of measures and methods for finding communities in social networks. In  this research, a modified version of the modularity measure proposed by Blondel et al. [4] is utilized to compare the quality of clusters (Equation 1) for measuring the success of a community decomposition of a network. This mea- sure is considered fast and effective to identify communities by using a greedy algorithm to approximately optimize the modularity values.  Q = 1  2m   [Aij   (kikj)  2m ]d(ci, cj), (1)  where Aij represents the weight of the edge between i and j, ki =   j Aij is the sum of the weights of the edges  attached to vertex i, ci is the community to which vertex i is assigned, the d-function d(u, v) is 1 if u = v and 0 otherwise and m =   ij Aij .  3.3 Detecting Communities In this section, we identify the methods used to detect  communities of similar users from our extracted Logfile. First, we defined a set of various force laws to recognize commu- nities in the network structure. Once the communities have been recognized, we ensured that each community had its own energy state which determines the relevance level of that particular community within its range of proximity. We used force directed methods to discover the similarity between users. Three types of methods were used: (i) the Yifan Hu Algorithm [13], (ii) the Fruchterman and Reingold Algorithm [10], and finally, the Force Atlas 2 Algorithm [18].  4. EXPERIMENTAL ANALYSIS We deployed the three algorithms (i) Yi Fan Hu Algo-  rithm, (ii) Fruchterman and Reingold Algorithm, and (iii) Force Atlas 2 Algorithm on HyperManyMedias Logfile ex- tracted during the period of (2/1/2011- 8/1/2011). Af- ter filtering out some data based on the conditions (users visits>= 10 & length of accumulated sessions>= 30 min- utes) and deleting outliers, our network consisted of 8, 510 Nodes (# of users) and 23, 079 Edges (# of edges between users and learning resources). Each edge connects a user (learner) to a learning resource. In this small portion of the Logfile, the number of learning resources is  10, 000 learning objects.  First, we noticed that the Yifan Hu Algorithm [10] proved to be efficient. It seems to overcome the localized nature of the Kernighan-Lin Algorithm [15] and also the local minima of the Fruchterman and Reingolds Algorithm [10]. We also deployed the Force Atlas 2 Algorithm, calculated the mod- ularity for each force directed method, and visualized the network.  4.1 Force Directed Method (Fruchterman Rein- gold Algorithm)  We used three parameters in the Fruchterman Reingolds [10] force directed method: (i) Area (which defines the num- ber of nodes in the graph); (ii) Gravity (it works to attract all nodes to the center to avoid dispersion of disconnected components); and (iii) Speed (convergence speed). We ran 20 trials and the best results obtained in trial 6 had a mod- ularity of 0.606 and number of communities (clusters) of 14. Accordingly, we present the social network structure in Fig- ure 1.  66    Figure 1: Social network structure for HMMs Log- file (Fruchterman Reingold)  Figure 2: Social network structure (Force Atlas 2)  4.2 Force Directed Method (Force Atlas 2 Al- gorithm)  The Force Atlas 2 Algorithm [18] uses a classic force- vector, similar to the Fruchterman Rheingold. This algo- rithm benefits from Barnes-Hut optimization techniques [1] and its own repulsive and tolerance levels [1]. We ran 20 trials and the best results obtained in trial 18 had a modu- larity of 0.610 and number of communities (clusters) of 14. Accordingly, we present the the social network structure in Figure 2. We noticed that we got the best results in this method when there is (i) a little repulsive force given by Scaling and (ii) a higher attractive force given by Gravity.  4.3 Force Directed Method (Yi fan Hu Algo- rithm)  The Yifan Hu Algorithm [13] overcomes local minima by using Barnes and Huts [1] octree technique which approxi- mates the short-and-long range force efficiently. It uses the  Table 1: Evaluation of the three Force-directed methods  Algorithm Modularity # of Communities  Fruchterman and Rheingold 0.606 14  Force Atlas 2 0.610 14  Yi Fan Hu 0.607 15  Figure 3: Social network structure (Yi-fan Hu)  adaptive cooling schemes and general repulsive force models to develop the set of forces to be applied on the data set for formation of the communities. We ran 20 trials and the best results obtained in trial 12, had a modularity of 0.607 and the number of communities (clusters) of 15. Accordingly, we present the the social network structure in Figure 3.  4.4 Discovering the Best Communities Struc- ture in HMMs Logfile Social Network  To summarize, by running multi-trials, we discovered the best combinations of parameters for each algorithm, as shown in Table 1. However, we noticed a slight difference in the results that could be inferred as follows: We found more clusters using the Yi fan Hu Algorithm; whereas, we obtained a better modularity measure using the Force Atlas 2 algorithm. Therefore, we decided to use the Force Atlas 2 algorithm for clustering. Figure 2 presents the notion of detecting communities of users in the Social Web.  4.5 Designing a Social Recommender System We considered that providing recommendations to a learner  based on similarity metrics between the users and him/her and extracted from the social network would answer this question. We propose adding a social recommender system to HMM repository where recommendations provided to a user (learner) is based on detecting triangles in the commu- nity [21], refer to Figure .  Figure 4: Adding personalized recommendations to a user profile based on three users (Triangle)  67    5. CONCLUSIONS We consider our research is different than any other re-  search that has been done on detecting community using graph-based methods for the following reasons: i) our re- search is an applied study on a real platform visited by thousands of users on a daily basis; ii) we used data collected from HyperManyMedias Logfile to discover communities in social networks; iii) finally, we proposed the triads concept for recommendations, keeping in mind that our current ex- periments are based on triangles of nodes. In our future work, we plan to experiment and compare the results based on learners feedback. In addition, we plan to complete our evaluation of the visual recommender system, using objec- tive metrics as well as user testing.  6. REFERENCES [1] Barnes, J., and Hut, P. A hierarchical 0 (n log iv)  force-calculation algorithm. Nature 324 (1986), 4.  [2] Bastian, M., Heymann, S., and Jacomy, M. Gephi: An open source software for exploring and manipulating networks. In International AAAI Conference on Weblogs and Social Media (2009), pp. 361362.  [3] Berk, J. The state of learning analytics. report for american society for training and development.  [4] Blondel, V., Guillaume, J., Lambiotte, R., and Lefebvre, E. Fast unfolding of communities in large networks. Journal of Statistical Mechanics: Theory and Experiment 2008 (2008), P10008.  [5] Clauset, A., Newman, M., and Moore, C. Finding community structure in very large networks. Physical Review E 70, 6 (2004), 066111.  [6] Dillon, T., Chang, E., et al. Overview of cognitive visualisation. In Digital Ecosystems and Technologies Conference (DEST), 2011 Proceedings of the 5th IEEE International Conference on (2011), IEEE, pp. 138142.  [7] Ebbinghaus, H. Memory: A contribution to experimental psychology. Teachers College, Columbia University, 1913.  [8] Flake, G., Lawrence, S., Giles, C., and Coetzee, F. Self-organization and identification of web communities. Computer 35, 3 (2002), 6670.  [9] Fortunato, S. Community detection in graphs. Physics Reports 486, 3-5 (2010), 75174.  [10] Fruchterman, T., and Reingold, E. Graph drawing by force-directed placement. Software- Practice and Experience 21, 11 (1991), 11291164.  [11] Gasevic, D., Zouaq, A., Torniai, C., Jovanovic, J., and Hatala, M. An approach to folksonomy-based ontology maintenance for learning environments. IEEE Transactions on Learning Technologies, 99 (2011), 11.  [12] Girvan, M., and Newman, M. Community structure in social and biological networks. Proceedings of the National Academy of Sciences 99, 12 (2002), 7821.  [13] Hu, Y. Efficient, high quality force directed graph drawing. Mathematica Journal 10, 1 (2005), 3771.  [14] Johnson, L., Smith, R., Willis, H., Levine, A., and Haywood, K. The 2011 horizon report.  [15] Kernighan, B., and Lin, S. An efficient heuristic procedure for partitioning graphs. Bell System  Technical Journal 49, 2 (1970), 291307.  [16] Kleinberg, J., Kumar, R., Raghavan, P., Rajagopalan, S., and Tomkins, A. The web as a graph: Measurements, models, and methods. In Proceedings of the 5th Annual International Conference on Computing and Combinatorics (1999), Springer-Verlag, pp. 117.  [17] Long, P., and Siemens, G. Penetrating the fog: Analytics in learning and education. EDUCAUSE Review 46, 5 (Sept. 2011), 3032+.  [18] Mathieu Jacomy, Sebastien Heymann, T. V. M. B. Force atlas 2, a graph layout algorithm for handy network visualization.  [19] Newman, M., and Girvan, M. Mixing patterns and community structure in networks. Statistical Mechanics of Complex Networks (2003), 6687.  [20] Newman, M., and Girvan, M. Finding and evaluating community structure in networks. Physical review E 69, 2 (2004), 026113.  [21] Serrour, B., Arenas, A., and Gomez, S. Detecting communities of triangles in complex networks using spectral optimization. Computer Communications (2010).  [22] Shum, S. B., and Ferguson, R. Social Learning Analytics.  [23] Zhuhadar, L., Nasraoui, O., and Wyatt, R. Dual representation of the semantic user profile for personalized web search in an evolving domain. In Proceedings of the AAAI 2009 Spring Symposium on Social Semantic Web, Where Web, vol. 2, pp. 8489.  68      